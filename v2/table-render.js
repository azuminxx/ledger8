/**
 * Áµ±ÂêàÂè∞Â∏≥„Ç∑„Çπ„ÉÜ„É† v2 - „ÉÜ„Éº„Éñ„É´ÊèèÁîª„ÉªË°®Á§∫
 * @description „ÉÜ„Éº„Éñ„É´Ë°®Á§∫„Éª„Çª„É´‰ΩúÊàê„Éª„É¨„É≥„ÉÄ„É™„É≥„Ç∞Ê©üËÉΩ
 * @version 2.0.0
 * 
 * üéØ **„Éï„Ç°„Ç§„É´„ÅÆË≤¨‰ªªÁØÑÂõ≤**
 * ‚úÖ „Éá„Éº„Çø„Çí„ÉÜ„Éº„Éñ„É´„Å´ÊèèÁîª„ÉªË°®Á§∫
 * ‚úÖ ÂêÑÁ®Æ„Çª„É´Ë¶ÅÁ¥†„ÅÆ‰ΩúÊàêÔºà„ÉÜ„Ç≠„Çπ„Éà„ÉªÂÖ•Âäõ„ÉªÈÅ∏Êäû„Éª„É™„É≥„ÇØ„ÉªË°åÁï™Âè∑Ôºâ
 * ‚úÖ „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥„Å®„ÅÆÈÄ£Êê∫
 * ‚úÖ „ÉÜ„Éº„Éñ„É´Ë°å„Éª„Çª„É´„ÅÆDOMÊßãÈÄ†‰ΩúÊàê
 * ‚úÖ „Çπ„Çø„Ç§„É´ÈÅ©Áî®„ÉªCSS „ÇØ„É©„ÇπË®≠ÂÆö
 * 
 * ‚ùå **„ÇÑ„Å£„Å¶„ÅØ„ÅÑ„Åë„Å™„ÅÑ„Åì„Å®ÔºàË≤¨‰ªªÁØÑÂõ≤Â§ñÔºâ**
 * ‚ùå „É¶„Éº„Ç∂„Éº„Ç§„Éô„É≥„ÉàÂá¶ÁêÜÔºà„ÇØ„É™„ÉÉ„ÇØ„Éª„Éâ„É©„ÉÉ„Ç∞Á≠âÔºâ
 * ‚ùå „Ç§„É≥„É©„Ç§„É≥Á∑®ÈõÜÊ©üËÉΩ
 * ‚ùå „Ç∑„Çπ„ÉÜ„É†ÂàùÊúüÂåñ„ÉªË®≠ÂÆöÁÆ°ÁêÜ
 * ‚ùå APIÈÄö‰ø°„Éª„Éá„Éº„ÇøÊ§úÁ¥¢
 * ‚ùå „Éò„ÉÉ„ÉÄ„Éº„Éª„Éï„Ç£„É´„Çø„Éº‰ΩúÊàê
 * 
 * üì¶ **Âê´„Åæ„Çå„Çã„ÇØ„É©„Çπ**
 * - TableDisplayManager: „É°„Ç§„É≥„ÅÆË°®Á§∫ÁÆ°ÁêÜ„ÇØ„É©„Çπ
 * 
 * üîó **‰æùÂ≠òÈñ¢‰øÇ**
 * - DOMHelper (DOMÊìç‰Ωú)
 * - StyleManager („Çπ„Çø„Ç§„É´ÁÆ°ÁêÜ)
 * - FieldValueProcessor (ÂÄ§Âá¶ÁêÜ)
 * - dataManager („Éá„Éº„ÇøÁÆ°ÁêÜ)
 * - window.paginationManager („Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥)
 * 
 * üí° **‰ΩøÁî®‰æã**
 * ```javascript
 * const tableManager = new TableDisplayManager();
 * tableManager.displayIntegratedData(records, null, false);
 * ```
 */
(function() {
    'use strict';

    // „Ç∞„É≠„Éº„Éê„É´ÂêçÂâçÁ©∫ÈñìÁ¢∫‰øù
    window.LedgerV2 = window.LedgerV2 || {};
    window.LedgerV2.TableRender = {};

    // =============================================================================
    // „ÉÜ„Éº„Éñ„É´Ë°®Á§∫ÁÆ°ÁêÜ
    // =============================================================================

    class TableDisplayManager {
        constructor() {
            this.currentData = [];
            this.isEditMode = false;
        }

        /**
         * Áµ±Âêà„Éá„Éº„Çø„Çí„ÉÜ„Éº„Éñ„É´„Å´Ë°®Á§∫
         */
        displayIntegratedData(integratedRecords, targetAppId = null, isPagedData = false) {
            console.log(`üìã „ÉÜ„Éº„Éñ„É´Ë°®Á§∫ÈñãÂßã: ${integratedRecords.length}‰ª∂${isPagedData ? ' („Éö„Éº„Ç∏Ë°®Á§∫)' : ''}`);
            
            const tbody = DOMHelper.getTableBody();
            if (!tbody) {
                console.error('‚ùå „ÉÜ„Éº„Éñ„É´„Éú„Éá„Ç£„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
                return;
            }

            // ËøΩÂä†„É¢„Éº„ÉâÁ¢∫Ë™ç„Å®ÈáçË§á„ÉÅ„Çß„ÉÉ„ÇØ
            const existingKeys = dataManager.getExistingRecordKeys();
            const newRecords = integratedRecords.filter(record => {
                if (!dataManager.appendMode) return true;
                return !existingKeys.has(record.integrationKey || '');
            });

            dataManager.clearTable();
            
            // ËøΩÂä†„É¢„Éº„Éâ„Åß„Å™„ÅÑÂ†¥Âêà„ÄÅ„Åæ„Åü„ÅØ„Éá„Éº„Çø„ÅåÊñ∞Ë¶è„ÅÆÂ†¥Âêà„Å´ this.currentData „ÇíÊõ¥Êñ∞
            if (!dataManager.appendMode) {
                this.currentData = integratedRecords;
            } else {
                // ËøΩÂä†„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØÊñ∞Ë¶è„É¨„Ç≥„Éº„Éâ„ÅÆ„Åø„ÇíËøΩÂä†
                this.currentData = this.currentData.concat(newRecords);
                console.log(`üìù ËøΩÂä†„É¢„Éº„Éâ: ${newRecords.length}‰ª∂„ÅÆÊñ∞Ë¶è„É¨„Ç≥„Éº„Éâ„ÇíËøΩÂä†`);
            }

            if (newRecords.length === 0 && !dataManager.appendMode) {
                dataManager.displayNoResults(tbody);
                
                // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥UI„ÇíÂâäÈô§
                if (window.paginationUI) {
                    window.paginationUI._removePaginationUI();
                }
                return;
            } else if (newRecords.length === 0 && dataManager.appendMode) {
                console.log('üìù ËøΩÂä†„É¢„Éº„Éâ: Êñ∞Ë¶è„É¨„Ç≥„Éº„Éâ„Å™„Åó - ÈáçË§á„É¨„Ç≥„Éº„Éâ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åó„Åü');
                return;
            }

            // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥Âá¶ÁêÜ„ÇíËøΩÂä†ÔºàËøΩÂä†„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØÁèæÂú®„ÅÆ„Éá„Éº„ÇøÂÖ®‰Ωì„Çí‰ΩøÁî®Ôºâ
            const dataForPagination = dataManager.appendMode ? this.currentData : newRecords;
            
            if (!isPagedData && window.paginationManager) {
                // ÂÖ®„Éá„Éº„Çø„Çí„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥„Éû„Éç„Éº„Ç∏„É£„Éº„Å´Ë®≠ÂÆö
                window.paginationManager.setAllData(dataForPagination);
                
                // 100‰ª∂‰ª•‰∏ä„ÅÆÂ†¥Âêà„ÅØ„Éö„Éº„Ç∏„É≥„Ç∞Ë°®Á§∫
                if (dataForPagination.length > 100) {
                    const pageData = window.paginationManager.getCurrentPageData();
                    this.displayIntegratedData(pageData, targetAppId, true); // „Éö„Éº„Ç∏„Éá„Éº„Çø„Å®„Åó„Å¶ÂÜçÂ∏∞Âëº„Å≥Âá∫„Åó
                    
                    // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥UI„Çí‰ΩúÊàê
                    if (window.paginationUI) {
                        setTimeout(() => {
                            window.paginationUI.createPaginationUI();
                        }, 100);
                    }
                    return;
                }
            }

            const fieldOrder = dataManager.getFieldOrder();
            console.log('„Éï„Ç£„Éº„É´„ÉâÈ†ÜÂ∫è:', fieldOrder);

            // Ë°®Á§∫„Åô„Çã„Éá„Éº„Çø„ÇíÊ±∫ÂÆöÔºàËøΩÂä†„É¢„Éº„Éâ„Åß„ÅØÊñ∞Ë¶è„É¨„Ç≥„Éº„Éâ„ÅÆ„Åø„ÄÅÈÄöÂ∏∏„É¢„Éº„Éâ„Åß„ÅØÂÖ®„Éá„Éº„ÇøÔºâ
            const recordsToDisplay = dataManager.appendMode ? newRecords : dataForPagination;
            const startRowIndex = dataManager.appendMode ? this.currentData.length - newRecords.length : 0;

            recordsToDisplay.forEach((record, index) => {
                const actualRowIndex = dataManager.appendMode ? startRowIndex + index : index;
                const row = this._createTableRow(record, fieldOrder, targetAppId, actualRowIndex);
                tbody.appendChild(row);
            });

            console.log(`‚úÖ „ÉÜ„Éº„Éñ„É´Ë°®Á§∫ÂÆå‰∫Ü: ${recordsToDisplay.length}Ë°å${isPagedData ? ' („Éö„Éº„Ç∏Ë°®Á§∫)' : ''}${dataManager.appendMode ? ' (ËøΩÂä†„É¢„Éº„Éâ)' : ''}`);

            // ËøΩÂä†„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØ„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÊÉÖÂ†±„ÇíÊõ¥Êñ∞
            if (dataManager.appendMode && window.paginationManager) {
                window.paginationManager.setAllData(this.currentData);
            }

            // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥UI„ÇíÊõ¥Êñ∞Ôºà100‰ª∂‰ª•‰∏ã„ÅÆÂ†¥Âêà„ÅØÂâäÈô§„Åï„Çå„ÇãÔºâ
            if (window.paginationUI && !isPagedData) {
                setTimeout(() => {
                    window.paginationUI.updatePaginationUI();
                }, 100);
            }
        }

        /**
         * „ÉÜ„Éº„Éñ„É´Ë°å„Çí‰ΩúÊàê
         */
        _createTableRow(record, fieldOrder, targetAppId, rowIndex = 0) {
            const row = document.createElement('tr');
            const rowId = dataManager.generateRowId();
            
            row.setAttribute('data-row-id', rowId);
            row.setAttribute('data-integration-key', record.integrationKey || '');
            
            // Ë°åÁï™Âè∑„ÅØfieldsConfig„ÅÆ_row_number„ÅßÂá¶ÁêÜ„Åï„Çå„Çã„Åü„ÇÅ„ÄÅËá™ÂãïËøΩÂä†„ÅØÁÑ°ÂäπÂåñ

            // „Éá„Éº„Çø„Çª„É´‰ΩúÊàê
            fieldOrder.forEach(fieldCode => {
                const cell = this._createDataCell(record, fieldCode, row, rowIndex);
                row.appendChild(cell);
            });

            return row;
        }

        /**
         * „Éá„Éº„Çø„Çª„É´„Çí‰ΩúÊàê
         */
        _createDataCell(record, fieldCode, row, rowIndex = 0) {
            const cell = document.createElement('td');
            const field = window.fieldsConfig.find(f => f.fieldCode === fieldCode);
            
            cell.setAttribute('data-field-code', fieldCode);
            
            if (!field) {
                cell.textContent = '';
                StyleManager.applyCellStyles(cell, '100px');
                return cell;
            }

            // Âè∞Â∏≥Âà•Ëâ≤ÂàÜ„Åë„Éª„Éï„Ç£„Éº„É´„ÉâÁâπÊÄß„ÅÆ„Åü„ÇÅ„ÅÆdataÂ±ûÊÄßËøΩÂä†
            if (field.sourceApp) {
                cell.setAttribute('data-source-app', field.sourceApp);
            }
            if (field.isPrimaryKey) {
                cell.setAttribute('data-is-primary-key', 'true');
            }
            if (field.isRecordId) {
                cell.setAttribute('data-is-record-id', 'true');
            }

            const value = FieldValueProcessor.process(record, fieldCode, '');
            const width = field.width || '100px';

            // „Çª„É´„Çø„Ç§„ÉóÂà•Âá¶ÁêÜ
            switch (field.cellType) {
                case 'row_number':
                    this._createRowNumberCell(cell, rowIndex);
                    break;
                case 'link':
                    this._createLinkCell(cell, value, record, field);
                    break;
                case 'input':
                    this._createInputCell(cell, value, field, row);
                    break;
                case 'select':
                    this._createSelectCell(cell, value, field, row);
                    break;
                default:
                    this._createTextCell(cell, value);
                    break;
            }

            StyleManager.applyCellStyles(cell, width);
            return cell;
        }

        /**
         * Ë°åÁï™Âè∑„Çª„É´„Çí‰ΩúÊàê
         */
        _createRowNumberCell(cell, rowIndex) {
            // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÊÉÖÂ†±„ÇíËÄÉÊÖÆ„Åó„ÅüË°åÁï™Âè∑Ë®àÁÆó
            let displayRowNumber = rowIndex + 1;
            if (window.paginationManager && window.paginationManager.allData.length > 100) {
                const paginationInfo = window.paginationManager.getPaginationInfo();
                displayRowNumber = paginationInfo.startRecord + rowIndex;
            }
            
            cell.textContent = displayRowNumber;
            cell.classList.add('row-number-cell', 'table-cell');
        }

        /**
         * „É™„É≥„ÇØ„Çª„É´„Çí‰ΩúÊàê
         */
        _createLinkCell(cell, value, record, field) {
            if (!value) {
                cell.textContent = '';
                return;
            }

            const link = document.createElement('a');
            link.href = this._buildRecordUrl(record, field);
            link.target = '_blank';
            link.textContent = value;
            link.classList.add('record-link');

            cell.appendChild(link);
        }

        /**
         * ÂÖ•Âäõ„Çª„É´„Çí‰ΩúÊàê
         */
        _createInputCell(cell, value, field, row) {
            if (TableEditMode.isLightweightMode()) {
                // ËªΩÈáè„É¢„Éº„ÉâÔºö„ÉÜ„Ç≠„Çπ„ÉàË°®Á§∫„ÅÆ„Åø
                cell.textContent = value || '';
                cell.setAttribute('data-editable', 'true');
                cell.classList.add('cell-editable');
                return;
            }

            // Á∑®ÈõÜ„É¢„Éº„ÉâÔºöinputË¶ÅÁ¥†‰ΩúÊàê
            const input = document.createElement('input');
            input.type = 'text';
            input.value = value || '';
            input.style.width = '100%';
            input.style.border = 'none';
            input.style.background = 'transparent';
            input.style.outline = 'none';
            
            // „Éï„Ç£„Éº„É´„ÉâÂπÖ„Å´Âøú„Åò„ÅüinputÂπÖË®≠ÂÆö
            const fieldWidth = field.width || '100px';
            const inputWidthClass = this._getInputWidthClass(fieldWidth);
            if (inputWidthClass) {
                input.classList.add(inputWidthClass);
            }

            cell.appendChild(input);
        }

        /**
         * „Çª„É¨„ÇØ„Éà„Çª„É´„Çí‰ΩúÊàê
         */
        _createSelectCell(cell, value, field, row) {
            if (TableEditMode.isLightweightMode()) {
                cell.textContent = value || '';
                cell.setAttribute('data-editable', 'true');
                cell.classList.add('cell-editable');
                return;
            }

            const select = document.createElement('select');
            select.style.width = '100%';
            select.style.border = 'none';
            select.style.background = 'transparent';

            // Á©∫„ÅÆ„Ç™„Éó„Ç∑„Éß„É≥
            const emptyOption = document.createElement('option');
            emptyOption.value = '';
            emptyOption.textContent = '';
            select.appendChild(emptyOption);

            // „Ç™„Éó„Ç∑„Éß„É≥ËøΩÂä†
            if (field.options) {
                field.options.forEach(option => {
                    const optionElement = document.createElement('option');
                    optionElement.value = option;
                    optionElement.textContent = option;
                    if (option === value) {
                        optionElement.selected = true;
                    }
                    select.appendChild(optionElement);
                });
            }

            select.value = value || '';
            cell.appendChild(select);
        }

        /**
         * „ÉÜ„Ç≠„Çπ„Éà„Çª„É´„Çí‰ΩúÊàê
         */
        _createTextCell(cell, value) {
            cell.textContent = value || '';
        }

        /**
         * „É¨„Ç≥„Éº„ÉâURL„ÇíÊßãÁØâ
         */
        _buildRecordUrl(record, field) {
            if (!field.sourceApp || !record.recordIds) {
                return '#';
            }

            const sourceApp = field.sourceApp;
            if (!window.LedgerV2.Config.APP_URL_MAPPINGS[sourceApp]) {
                return '#';
            }

            const appId = window.LedgerV2.Config.APP_IDS[sourceApp];
            const recordId = record.recordIds[sourceApp];

            if (!appId || !recordId) {
                return '#';
            }

            return window.LedgerV2.Config.APP_URL_MAPPINGS[sourceApp].replace('{appId}', appId).replace('{recordId}', recordId);
        }

        /**
         * ÂÖ•ÂäõÂπÖ„ÇØ„É©„Çπ„ÇíÂèñÂæó
         */
        _getInputWidthClass(fieldWidth) {
            const widthMap = {
                '68px': 'input-width-68',
                '78px': 'input-width-78',
                '98px': 'input-width-98'
            };
            return widthMap[fieldWidth] || null;
        }
    }

    // =============================================================================
    // „Ç∞„É≠„Éº„Éê„É´ÂÖ¨Èñã
    // =============================================================================

    window.LedgerV2.TableRender = { 
        TableDisplayManager
    };
    
    window.TableDisplayManager = TableDisplayManager;

    console.log('‚úÖ TableRender „É¢„Ç∏„É•„Éº„É´ÂàùÊúüÂåñÂÆå‰∫Ü');

})(); 